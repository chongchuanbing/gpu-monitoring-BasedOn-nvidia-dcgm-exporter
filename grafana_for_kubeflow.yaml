apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana-pv
  labels:
    name: grafana-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: {your nfs server}
    path: {your nfs path}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: monitor
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      name: grafana-pv
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: monitor
  labels:
    app: grafana
    chart: grafana
    heritage: Tiller
    release: istio
    istio: grafana
data:
  grafana.ini: |-
    [server]
    root_url = %(protocol)s://%(domain)s:%(http_port)s/grafana/
    serve_from_sub_path = true
    [auth.anonymous]
    enabled = true
    [auth.proxy]
    enabled = true
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: grafana
  namespace: monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: grafana
  template:
    metadata:
      labels:
        k8s-app: grafana
    spec:
      initContainers:
        - name: init-chown-data
          image: alpine:3.10
          imagePullPolicy: IfNotPresent
          command: ["chown", "-R", "472:472", "/var/lib/grafana/"]
          volumeMounts:
            - name: storage
              mountPath: /var/lib/grafana/
      containers:
        - name: grafana
          image: grafana/grafana:7.3.5
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
            - name: GF_SECURITY_ADMIN_USER
              value: admin
          ports:
            - containerPort: 3000
              protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /grafana/api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /grafana/api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - name: grafana-configuration
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
              readOnly: true
            - name: storage
              mountPath: /var/lib/grafana
      volumes:
        - name: grafana-configuration
          configMap:
            name:  grafana-config
        - name: storage
          persistentVolumeClaim:
            claimName: grafana-pvc
---

kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: grafana
  name: grafana-service
  namespace: monitor
spec:
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    k8s-app: grafana